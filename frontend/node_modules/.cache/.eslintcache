[{"/Users/ys/Documents/grid-trading/src/index.js":"1","/Users/ys/Documents/grid-trading/src/reportWebVitals.js":"2","/Users/ys/Documents/grid-trading/src/App.js":"3","/Users/ys/Documents/grid-trading/src/connect.js":"4","/Users/ys/Documents/grid-trading/src/Box.js":"5","/Users/ys/Documents/grid-trading/src/Button.js":"6","/Users/ys/Documents/grid-trading/src/LimitForm.js":"7"},{"size":369,"mtime":1655877466960,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1653618380654,"results":"10","hashOfConfig":"9"},{"size":606,"mtime":1655877556682,"results":"11","hashOfConfig":"9"},{"size":3002,"mtime":1653637686671,"results":"12","hashOfConfig":"9"},{"size":486,"mtime":1655879250777,"results":"13","hashOfConfig":"9"},{"size":251,"mtime":1655869984542,"results":"14","hashOfConfig":"9"},{"size":832,"mtime":1655880197776,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"20"},"1oufsji",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ys/Documents/grid-trading/src/index.js",["41"],[],"import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport CreatSocketConnection from \"./connect\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\nreportWebVitals();\n",[],"/Users/ys/Documents/grid-trading/src/reportWebVitals.js",[],[],"/Users/ys/Documents/grid-trading/src/App.js",[],[],"/Users/ys/Documents/grid-trading/src/connect.js",["42","43","44","45","46"],[],"import { useState } from \"react\";\n\n// let socket; // 소켓\n\n// 웹소켓 연결\nfunction CreatSocketConnection(type, conncectType, dataMaker) {\n  const SUCCESS = `${type}_SUCCESS`;\n  const ERROR = `${type}_ERROR`;\n  let payload = 0;\n  const [data, setData] = useState(\"\");\n  let socket = new WebSocket(\"wss://api.upbit.com/websocket/v1\");\n  socket.binaryType = \"arraybuffer\";\n\n  socket.onopen = () => {\n    //console.log(\"?\");\n    socket.send(\n      JSON.stringify([\n        { ticket: \"UNIQUE_TICKET\" },\n        { type: \"ticker\", codes: [\"KRW-BTC\"] }, // \"KRW-BTC\",\"KRW-ETH\" -> parsing\n        { type: \"orderbook\", codes: [\"KRW-BTC\"] },\n        { type: \"trade\", codes: [\"KRW-BTC\"] },\n      ])\n    );\n  };\n\n  socket.onmessage = (e) => {\n    console.log(\"message\");\n    var enc = new TextDecoder(\"utf-8\");\n    var arr = new Uint8Array(e.data);\n    var str_d = enc.decode(arr);\n    var d = JSON.parse(str_d);\n    if (d.type === \"ticker\") {\n      // 현재가 데이터\n      setData(d.trade_price);\n      // TOD\n      //console.log(d.opening_price);\n      // payload = d.opening_price;\n    }\n    if (d.type == \"orderbook\") {\n      // 호가 데이터\n      // TODO\n    }\n    if (d.type == \"trade\") {\n      // 체결 데이터\n      // TODO\n    }\n  };\n  socket.onerror = (e) => {\n    console.log(e);\n  };\n  return (\n    <div>\n      <h1>{data}</h1>\n    </div>\n  );\n}\n\n//   return () => (dispatch, getState) => {\n//     let socket = new WebSocket(\"wss://api.upbit.com/websocket/v1\");\n//     socket.binaryType = \"arraybuffer\";\n\n//     //socket = new WebSocket(\"wss://api.upbit.com/websocket/v1\");\n//     //socket.binaryType = \"arraybuffer\";\n\n//     socket.onopen = () => {\n//       console.log(\"?\");\n//       socket.send(\n//         JSON.stringify([\n//           { ticket: \"UNIQUE_TICKET\" },\n//           { type: \"ticker\", codes: [\"KRW-BTC\"] }, // \"KRW-BTC\",\"KRW-ETH\" -> parsing\n//           { type: \"orderbook\", codes: [\"KRW-BTC\"] },\n//           { type: \"trade\", codes: [\"KRW-BTC\"] },\n//         ])\n//       );\n//     };\n\n//     socket.onclose = function (e) {\n//       socket = undefined;\n//     };\n\n//     socket.onmessage = (e) => {\n//       console.log(\"?\");\n//       var enc = new TextDecoder(\"utf-8\");\n//       var arr = new Uint8Array(e.data);\n//       var str_d = enc.decode(arr);\n//       var d = JSON.parse(str_d);\n//       const state = getState();\n//       if (d.type == \"ticker\") {\n//         dispatch({ type: SUCCESS, payload: state });\n//         // 현재가 데이터\n//         // TOD\n//         console.log(\"yay\");\n//       }\n//       if (d.type == \"orderbook\") {\n//         // 호가 데이터\n//         // TODO\n//       }\n//       if (d.type == \"trade\") {\n//         // 체결 데이터\n//         // TODO\n//       }\n//     };\n//     socket.onerror = (e) => {\n//       dispatch({ type: ERROR, payload: e });\n//     };\n//   };\n\n// function closeWS() {\n//   if (socket != undefined) {\n//     socket.close();\n//     socket = undefined;\n//   }\n// }\n\nexport default CreatSocketConnection;\n","/Users/ys/Documents/grid-trading/src/Box.js",["47"],[],"import \"./Box.css\";\nimport Button from \"./Button\";\nimport LimitForm from \"./LimitForm\";\n\nfunction Box() {\n  const startTrade = () => {};\n  return (\n    <div className=\"Box\">\n      <h1 className=\"Box-heading\">Arithmetic</h1>\n      <div className=\"Content App-box\">\n        <div className=\"Content-inner\">\n          <div className=\"LimitForm\"></div>\n          <LimitForm />\n        </div>\n      </div>\n      <Button className=\"start\">Start</Button>\n    </div>\n  );\n}\n\nexport default Box;\n","/Users/ys/Documents/grid-trading/src/Button.js",[],[],"/Users/ys/Documents/grid-trading/src/LimitForm.js",["48","49"],[],{"ruleId":"50","severity":1,"message":"51","line":5,"column":8,"nodeType":"52","messageId":"53","endLine":5,"endColumn":29},{"ruleId":"50","severity":1,"message":"54","line":7,"column":9,"nodeType":"52","messageId":"53","endLine":7,"endColumn":16},{"ruleId":"50","severity":1,"message":"55","line":8,"column":9,"nodeType":"52","messageId":"53","endLine":8,"endColumn":14},{"ruleId":"50","severity":1,"message":"56","line":9,"column":7,"nodeType":"52","messageId":"53","endLine":9,"endColumn":14},{"ruleId":"57","severity":1,"message":"58","line":39,"column":16,"nodeType":"59","messageId":"60","endLine":39,"endColumn":18},{"ruleId":"57","severity":1,"message":"58","line":43,"column":16,"nodeType":"59","messageId":"60","endLine":43,"endColumn":18},{"ruleId":"50","severity":1,"message":"61","line":6,"column":9,"nodeType":"52","messageId":"53","endLine":6,"endColumn":19},{"ruleId":"50","severity":1,"message":"62","line":4,"column":9,"nodeType":"52","messageId":"53","endLine":4,"endColumn":10},{"ruleId":"63","severity":2,"message":"64","line":4,"column":13,"nodeType":"52","messageId":"65","endLine":4,"endColumn":25},"no-unused-vars","'CreatSocketConnection' is defined but never used.","Identifier","unusedVar","'SUCCESS' is assigned a value but never used.","'ERROR' is assigned a value but never used.","'payload' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'startTrade' is assigned a value but never used.","'t' is assigned a value but never used.","no-undef","'useTranslate' is not defined.","undef"]