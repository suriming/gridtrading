{"ast":null,"code":"var _jsxFileName = \"/Users/ys/Documents/grid-trading/src/ChartBox.js\",\n    _s = $RefreshSig$();\n\nimport ApexCharts from \"apexcharts\";\nimport { useEffect, useState } from \"react\";\nimport ReactApexChart from \"react-apexcharts\"; // import { ChartDraw } from \"./api\";\n\nimport ChartDraw from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIAL_VALUES = {\n  random: {\n    candle_date_time_kst: \"2018-04-18T19:16:00\",\n    low_price: 90,\n    high_price: 100,\n    opening_price: 0,\n    trade_price: 70\n  }\n};\n\nfunction DateConvert(date) {\n  let tmp = new Date(date);\n  return tmp;\n}\n\n_c = DateConvert;\n\nfunction ChartBox() {\n  _s();\n\n  let initialValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_VALUES;\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadingError, setLoadingError] = useState(null);\n  const [dataTest, setDataTest] = useState([{\n    initialValues\n  }]);\n  const data = [{\n    time_close: \"2018-04-18T19:16:00\",\n    open: 8615000,\n    high: 8618000,\n    low: 8611000,\n    close: 8611000\n  }];\n\n  const asyncTest = async () => {\n    const options = {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\"\n      }\n    };\n    fetch(\"https://api.upbit.com/v1/candles/minutes/1?market=KRW-BTC&count=20\", options).then(response => response.json()).then(result => {\n      console.log(result);\n      setDataTest(result);\n    }).catch(err => console.error(err));\n    console.log(dataTest);\n  };\n\n  useEffect(() => {\n    asyncTest();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: 550\n    },\n    children: [loadingError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: loadingError.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(ReactApexChart, {\n      type: \"candlestick\",\n      options: {\n        tooltip: {\n          theme: \"dark\"\n        },\n        // theme: {\n        //   mode: \"dark\",\n        // },\n        chart: {\n          type: \"candlestick\",\n          width: 550\n        },\n        xaxis: {\n          type: \"datetime\",\n          categories: data === null || data === void 0 ? void 0 : data.map(price => price.time_close)\n        }\n      },\n      series: [{\n        data: dataTest === null || dataTest === void 0 ? void 0 : dataTest.map(price => {\n          return [DateConvert(price.candle_date_time_kst), // Date.parse(price.candle_date_time_kst),\n          price.opening_price, price.high_price, price.low_price, price.trade_price];\n        })\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChartBox, \"F3cuE7J8KhjInuBnwAaH8AtgFzY=\");\n\n_c2 = ChartBox;\nexport default ChartBox;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DateConvert\");\n$RefreshReg$(_c2, \"ChartBox\");","map":{"version":3,"names":["ApexCharts","useEffect","useState","ReactApexChart","ChartDraw","INITIAL_VALUES","random","candle_date_time_kst","low_price","high_price","opening_price","trade_price","DateConvert","date","tmp","Date","ChartBox","initialValues","isLoading","setIsLoading","loadingError","setLoadingError","dataTest","setDataTest","data","time_close","open","high","low","close","asyncTest","options","method","headers","Accept","fetch","then","response","json","result","console","log","catch","err","error","width","message","tooltip","theme","chart","type","xaxis","categories","map","price"],"sources":["/Users/ys/Documents/grid-trading/src/ChartBox.js"],"sourcesContent":["import ApexCharts from \"apexcharts\";\nimport { useEffect, useState } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n// import { ChartDraw } from \"./api\";\nimport ChartDraw from \"./api\";\n\nconst INITIAL_VALUES = {\n  random: {\n    candle_date_time_kst: \"2018-04-18T19:16:00\",\n    low_price: 90,\n    high_price: 100,\n    opening_price: 0,\n    trade_price: 70,\n  },\n};\n\nfunction DateConvert(date) {\n  let tmp = new Date(date);\n  return tmp;\n}\n\nfunction ChartBox(initialValues = INITIAL_VALUES) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadingError, setLoadingError] = useState(null);\n  const [dataTest, setDataTest] = useState([{ initialValues }]);\n  const data = [\n    {\n      time_close: \"2018-04-18T19:16:00\",\n      open: 8615000,\n      high: 8618000,\n      low: 8611000,\n      close: 8611000,\n    },\n  ];\n\n  const asyncTest = async () => {\n    const options = { method: \"GET\", headers: { Accept: \"application/json\" } };\n    fetch(\n      \"https://api.upbit.com/v1/candles/minutes/1?market=KRW-BTC&count=20\",\n      options\n    )\n      .then((response) => response.json())\n      .then((result) => {\n        console.log(result);\n        setDataTest(result);\n      })\n      .catch((err) => console.error(err));\n    console.log(dataTest);\n  };\n\n  useEffect(() => {\n    asyncTest();\n  }, []);\n\n  return (\n    <div style={{ width: 550 }}>\n      {loadingError && <p>{loadingError.message}</p>}\n      <ReactApexChart\n        type=\"candlestick\"\n        options={{\n          tooltip: {\n            theme: \"dark\",\n          },\n          // theme: {\n          //   mode: \"dark\",\n          // },\n          chart: { type: \"candlestick\", width: 550 },\n          xaxis: {\n            type: \"datetime\",\n            categories: data?.map((price) => price.time_close),\n          },\n        }}\n        series={[\n          {\n            data: dataTest?.map((price) => {\n              return [\n                DateConvert(price.candle_date_time_kst),\n                // Date.parse(price.candle_date_time_kst),\n                price.opening_price,\n                price.high_price,\n                price.low_price,\n                price.trade_price,\n              ];\n            }),\n          },\n        ]}\n      />\n    </div>\n  );\n}\n\nexport default ChartBox;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}