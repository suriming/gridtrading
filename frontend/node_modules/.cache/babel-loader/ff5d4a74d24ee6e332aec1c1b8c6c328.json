{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nvar socket; // 소켓\n// 웹소켓 연결\n\nfunction ConnectWS() {\n  _s();\n\n  const [ticker, setTicker] = useState(0);\n\n  const onChangeTicker = event => setTicker(event.target.value); //   if (socket != undefined) {\n  //     socket.close();\n  //   }\n  //socket = new WebSocket(\"wss://api.upbit.com/websocket/v1\");\n  //socket.binaryType = \"arraybuffer\";\n\n\n  socket.onopen = () => {\n    filterRequest([{\n      ticket: \"UNIQUE_TICKET\"\n    }, {\n      type: \"ticker\",\n      codes: [\"KRW-BTC\"]\n    }, // \"KRW-BTC\",\"KRW-ETH\" -> parsing\n    {\n      type: \"orderbook\",\n      codes: [\"KRW-BTC\"]\n    }, {\n      type: \"trade\",\n      codes: [\"KRW-BTC\"]\n    }]);\n  };\n\n  socket.onclose = function (e) {\n    socket = undefined;\n  };\n\n  socket.onmessage = function (e) {\n    var enc = new TextDecoder(\"utf-8\");\n    var arr = new Uint8Array(e.data);\n    var str_d = enc.decode(arr);\n    var d = JSON.parse(str_d);\n\n    if (d.type == \"ticker\") {\n      // 현재가 데이터\n      // TOD\n      console.log(\"yay\");\n    }\n\n    if (d.type == \"orderbook\") {// 호가 데이터\n      // TODO\n    }\n\n    if (d.type == \"trade\") {// 체결 데이터\n      // TODO\n    }\n  };\n} // 웹소켓 연결 해제\n\n\n_s(ConnectWS, \"hYSOyKwoR4MQ1TxRgQnEQ9myPzU=\");\n\n_c = ConnectWS;\n\nfunction closeWS() {\n  if (socket != undefined) {\n    socket.close();\n    socket = undefined;\n  }\n} // 웹소켓 요청\n\n\nfunction filterRequest(filter) {\n  if (socket == undefined) {\n    alert(\"no connect exists\");\n    return;\n  }\n\n  socket.send(filter);\n} //ConnectWS();\n\n\nfunction sendMessage(_ref) {\n  let {} = _ref;\n  return;\n}\n\nexport default ConnectWS;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConnectWS\");","map":{"version":3,"names":["useState","socket","ConnectWS","ticker","setTicker","onChangeTicker","event","target","value","onopen","filterRequest","ticket","type","codes","onclose","e","undefined","onmessage","enc","TextDecoder","arr","Uint8Array","data","str_d","decode","d","JSON","parse","console","log","closeWS","close","filter","alert","send","sendMessage"],"sources":["/Users/ys/Documents/grid-trading/src/connect.js"],"sourcesContent":["import { useState } from \"react\";\n\nvar socket; // 소켓\n\n// 웹소켓 연결\nfunction ConnectWS() {\n  const [ticker, setTicker] = useState(0);\n  const onChangeTicker = (event) => setTicker(event.target.value);\n  //   if (socket != undefined) {\n  //     socket.close();\n  //   }\n\n  //socket = new WebSocket(\"wss://api.upbit.com/websocket/v1\");\n  //socket.binaryType = \"arraybuffer\";\n\n  socket.onopen = () => {\n    filterRequest([\n      { ticket: \"UNIQUE_TICKET\" },\n      { type: \"ticker\", codes: [\"KRW-BTC\"] }, // \"KRW-BTC\",\"KRW-ETH\" -> parsing\n      { type: \"orderbook\", codes: [\"KRW-BTC\"] },\n      { type: \"trade\", codes: [\"KRW-BTC\"] },\n    ]);\n  };\n  socket.onclose = function (e) {\n    socket = undefined;\n  };\n  socket.onmessage = function (e) {\n    var enc = new TextDecoder(\"utf-8\");\n    var arr = new Uint8Array(e.data);\n    var str_d = enc.decode(arr);\n    var d = JSON.parse(str_d);\n    if (d.type == \"ticker\") {\n      // 현재가 데이터\n      // TOD\n      console.log(\"yay\");\n    }\n    if (d.type == \"orderbook\") {\n      // 호가 데이터\n      // TODO\n    }\n    if (d.type == \"trade\") {\n      // 체결 데이터\n      // TODO\n    }\n  };\n}\n// 웹소켓 연결 해제\nfunction closeWS() {\n  if (socket != undefined) {\n    socket.close();\n    socket = undefined;\n  }\n}\n\n// 웹소켓 요청\nfunction filterRequest(filter) {\n  if (socket == undefined) {\n    alert(\"no connect exists\");\n    return;\n  }\n  socket.send(filter);\n}\n\n//ConnectWS();\n\nfunction sendMessage({}) {\n  return;\n}\n\nexport default ConnectWS;\n"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,IAAIC,MAAJ,C,CAAY;AAEZ;;AACA,SAASC,SAAT,GAAqB;EAAA;;EACnB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,CAAD,CAApC;;EACA,MAAMK,cAAc,GAAIC,KAAD,IAAWF,SAAS,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAA3C,CAFmB,CAGnB;EACA;EACA;EAEA;EACA;;;EAEAP,MAAM,CAACQ,MAAP,GAAgB,MAAM;IACpBC,aAAa,CAAC,CACZ;MAAEC,MAAM,EAAE;IAAV,CADY,EAEZ;MAAEC,IAAI,EAAE,QAAR;MAAkBC,KAAK,EAAE,CAAC,SAAD;IAAzB,CAFY,EAE4B;IACxC;MAAED,IAAI,EAAE,WAAR;MAAqBC,KAAK,EAAE,CAAC,SAAD;IAA5B,CAHY,EAIZ;MAAED,IAAI,EAAE,OAAR;MAAiBC,KAAK,EAAE,CAAC,SAAD;IAAxB,CAJY,CAAD,CAAb;EAMD,CAPD;;EAQAZ,MAAM,CAACa,OAAP,GAAiB,UAAUC,CAAV,EAAa;IAC5Bd,MAAM,GAAGe,SAAT;EACD,CAFD;;EAGAf,MAAM,CAACgB,SAAP,GAAmB,UAAUF,CAAV,EAAa;IAC9B,IAAIG,GAAG,GAAG,IAAIC,WAAJ,CAAgB,OAAhB,CAAV;IACA,IAAIC,GAAG,GAAG,IAAIC,UAAJ,CAAeN,CAAC,CAACO,IAAjB,CAAV;IACA,IAAIC,KAAK,GAAGL,GAAG,CAACM,MAAJ,CAAWJ,GAAX,CAAZ;IACA,IAAIK,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAAR;;IACA,IAAIE,CAAC,CAACb,IAAF,IAAU,QAAd,EAAwB;MACtB;MACA;MACAgB,OAAO,CAACC,GAAR,CAAY,KAAZ;IACD;;IACD,IAAIJ,CAAC,CAACb,IAAF,IAAU,WAAd,EAA2B,CACzB;MACA;IACD;;IACD,IAAIa,CAAC,CAACb,IAAF,IAAU,OAAd,EAAuB,CACrB;MACA;IACD;EACF,CAlBD;AAmBD,C,CACD;;;GAzCSV,S;;KAAAA,S;;AA0CT,SAAS4B,OAAT,GAAmB;EACjB,IAAI7B,MAAM,IAAIe,SAAd,EAAyB;IACvBf,MAAM,CAAC8B,KAAP;IACA9B,MAAM,GAAGe,SAAT;EACD;AACF,C,CAED;;;AACA,SAASN,aAAT,CAAuBsB,MAAvB,EAA+B;EAC7B,IAAI/B,MAAM,IAAIe,SAAd,EAAyB;IACvBiB,KAAK,CAAC,mBAAD,CAAL;IACA;EACD;;EACDhC,MAAM,CAACiC,IAAP,CAAYF,MAAZ;AACD,C,CAED;;;AAEA,SAASG,WAAT,OAAyB;EAAA,IAAJ,EAAI;EACvB;AACD;;AAED,eAAejC,SAAf"},"metadata":{},"sourceType":"module"}