{"ast":null,"code":"var _jsxFileName = \"/Users/ys/Documents/grid-trading/src/ChartBox.js\",\n    _s = $RefreshSig$();\n\nimport ApexCharts from \"apexcharts\";\nimport { useEffect, useState } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { ChartDraw } from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChartBox() {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadingError, setLoadingError] = useState(null); // const options = { method: \"GET\", headers: { Accept: \"application/json\" } };\n  // fetch(\n  //   \"https://api.upbit.com/v1/candles/minutes/1?market=KRW-BTC&count=5\",\n  //   options\n  // )\n  //   .then((response) => response.json())\n  //   .then((response) => console.log(response))\n  //   .catch((err) => console.error(err));\n\n  const data = [{\n    time_close: \"2018-04-18T19:16:00\",\n    open: 8615000,\n    high: 8618000,\n    low: 8611000,\n    close: 8611000\n  }];\n\n  const handleLoad = async () => {\n    let result;\n\n    try {\n      setLoadingError(null);\n      setIsLoading(true);\n      result = await ChartDraw();\n    } catch (error) {\n      setLoadingError(error);\n      return;\n    } finally {\n      setIsLoading(false);\n    }\n\n    const {\n      data_test\n    } = result;\n    console.log(data_test);\n  };\n\n  const handleLoadMore = () => {\n    handleLoad();\n  };\n\n  useEffect(() => {\n    handleLoad();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loadingError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: loadingError.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(ReactApexChart, {\n      type: \"candlestick\",\n      options: {\n        chart: {\n          type: \"candlestick\"\n        },\n        xaxis: {\n          type: \"datetime\",\n          categories: data === null || data === void 0 ? void 0 : data.map(price => price.time_close)\n        }\n      },\n      series: [{\n        data: data === null || data === void 0 ? void 0 : data.map(price => {\n          return [Date.parse(price.time_close), price.open, price.high, price.low, price.close];\n        })\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChartBox, \"Pi7f8VX3ITnr8AdhEcfmoUxRcQc=\");\n\n_c = ChartBox;\nexport default ChartBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartBox\");","map":{"version":3,"names":["ApexCharts","useEffect","useState","ReactApexChart","ChartDraw","ChartBox","isLoading","setIsLoading","loadingError","setLoadingError","data","time_close","open","high","low","close","handleLoad","result","error","data_test","console","log","handleLoadMore","message","chart","type","xaxis","categories","map","price","Date","parse"],"sources":["/Users/ys/Documents/grid-trading/src/ChartBox.js"],"sourcesContent":["import ApexCharts from \"apexcharts\";\nimport { useEffect, useState } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { ChartDraw } from \"./api\";\n\nfunction ChartBox() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadingError, setLoadingError] = useState(null);\n  // const options = { method: \"GET\", headers: { Accept: \"application/json\" } };\n  // fetch(\n  //   \"https://api.upbit.com/v1/candles/minutes/1?market=KRW-BTC&count=5\",\n  //   options\n  // )\n  //   .then((response) => response.json())\n  //   .then((response) => console.log(response))\n  //   .catch((err) => console.error(err));\n\n  const data = [\n    {\n      time_close: \"2018-04-18T19:16:00\",\n      open: 8615000,\n      high: 8618000,\n      low: 8611000,\n      close: 8611000,\n    },\n  ];\n\n  const handleLoad = async () => {\n    let result;\n    try {\n      setLoadingError(null);\n      setIsLoading(true);\n      result = await ChartDraw();\n    } catch (error) {\n      setLoadingError(error);\n      return;\n    } finally {\n      setIsLoading(false);\n    }\n    const { data_test } = result;\n    console.log(data_test);\n  };\n\n  const handleLoadMore = () => {\n    handleLoad();\n  };\n\n  useEffect(() => {\n    handleLoad();\n  }, []);\n\n  return (\n    <div>\n      {loadingError && <p>{loadingError.message}</p>}\n      <ReactApexChart\n        type=\"candlestick\"\n        options={{\n          chart: { type: \"candlestick\" },\n          xaxis: {\n            type: \"datetime\",\n            categories: data?.map((price) => price.time_close),\n          },\n        }}\n        series={[\n          {\n            data: data?.map((price) => {\n              return [\n                Date.parse(price.time_close),\n                price.open,\n                price.high,\n                price.low,\n                price.close,\n              ];\n            }),\n          },\n        ]}\n      />\n    </div>\n  );\n}\n\nexport default ChartBox;\n"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAEA,SAASC,QAAT,GAAoB;EAAA;;EAClB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,IAAD,CAAhD,CAFkB,CAGlB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMQ,IAAI,GAAG,CACX;IACEC,UAAU,EAAE,qBADd;IAEEC,IAAI,EAAE,OAFR;IAGEC,IAAI,EAAE,OAHR;IAIEC,GAAG,EAAE,OAJP;IAKEC,KAAK,EAAE;EALT,CADW,CAAb;;EAUA,MAAMC,UAAU,GAAG,YAAY;IAC7B,IAAIC,MAAJ;;IACA,IAAI;MACFR,eAAe,CAAC,IAAD,CAAf;MACAF,YAAY,CAAC,IAAD,CAAZ;MACAU,MAAM,GAAG,MAAMb,SAAS,EAAxB;IACD,CAJD,CAIE,OAAOc,KAAP,EAAc;MACdT,eAAe,CAACS,KAAD,CAAf;MACA;IACD,CAPD,SAOU;MACRX,YAAY,CAAC,KAAD,CAAZ;IACD;;IACD,MAAM;MAAEY;IAAF,IAAgBF,MAAtB;IACAG,OAAO,CAACC,GAAR,CAAYF,SAAZ;EACD,CAdD;;EAgBA,MAAMG,cAAc,GAAG,MAAM;IAC3BN,UAAU;EACX,CAFD;;EAIAf,SAAS,CAAC,MAAM;IACde,UAAU;EACX,CAFQ,EAEN,EAFM,CAAT;EAIA,oBACE;IAAA,WACGR,YAAY,iBAAI;MAAA,UAAIA,YAAY,CAACe;IAAjB;MAAA;MAAA;MAAA;IAAA,QADnB,eAEE,QAAC,cAAD;MACE,IAAI,EAAC,aADP;MAEE,OAAO,EAAE;QACPC,KAAK,EAAE;UAAEC,IAAI,EAAE;QAAR,CADA;QAEPC,KAAK,EAAE;UACLD,IAAI,EAAE,UADD;UAELE,UAAU,EAAEjB,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEkB,GAAN,CAAWC,KAAD,IAAWA,KAAK,CAAClB,UAA3B;QAFP;MAFA,CAFX;MASE,MAAM,EAAE,CACN;QACED,IAAI,EAAEA,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEkB,GAAN,CAAWC,KAAD,IAAW;UACzB,OAAO,CACLC,IAAI,CAACC,KAAL,CAAWF,KAAK,CAAClB,UAAjB,CADK,EAELkB,KAAK,CAACjB,IAFD,EAGLiB,KAAK,CAAChB,IAHD,EAILgB,KAAK,CAACf,GAJD,EAKLe,KAAK,CAACd,KALD,CAAP;QAOD,CARK;MADR,CADM;IATV;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA4BD;;GA1EQV,Q;;KAAAA,Q;AA4ET,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}