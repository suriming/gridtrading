{"ast":null,"code":"var _jsxFileName = \"/Users/ys/Documents/grid-trading/src/ChartBox.js\";\nimport ApexCharts from \"apexcharts\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChartBox() {\n  const data = [{\n    time_close: \"2018-04-18T19:16:00\",\n    open: 8615000,\n    high: 8618000,\n    low: 8611000,\n    close: 8611000\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n      type: \"candlestick\",\n      options: {\n        chart: {\n          type: \"candlestick\"\n        },\n        xaxis: {\n          type: \"datetime\",\n          categories: data === null || data === void 0 ? void 0 : data.map(price => price.time_close)\n        }\n      },\n      series: [{\n        data: data === null || data === void 0 ? void 0 : data.map(price => {\n          return [Date.parse(price.time_close), price.open, price.high, price.low, price.close];\n        })\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ChartBox;\nexport default ChartBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartBox\");","map":{"version":3,"names":["ApexCharts","ReactApexChart","ChartBox","data","time_close","open","high","low","close","chart","type","xaxis","categories","map","price","Date","parse"],"sources":["/Users/ys/Documents/grid-trading/src/ChartBox.js"],"sourcesContent":["import ApexCharts from \"apexcharts\";\nimport ReactApexChart from \"react-apexcharts\";\n\nfunction ChartBox() {\n  const data = [\n    {\n      time_close: \"2018-04-18T19:16:00\",\n      open: 8615000,\n      high: 8618000,\n      low: 8611000,\n      close: 8611000,\n    },\n  ];\n  return (\n    <div>\n      <ReactApexChart\n        type=\"candlestick\"\n        options={{\n          chart: { type: \"candlestick\" },\n          xaxis: {\n            type: \"datetime\",\n            categories: data?.map((price) => price.time_close),\n          },\n        }}\n        series={[\n          {\n            data: data?.map((price) => {\n              return [\n                Date.parse(price.time_close),\n                price.open,\n                price.high,\n                price.low,\n                price.close,\n              ];\n            }),\n          },\n        ]}\n      />\n    </div>\n  );\n}\n\nexport default ChartBox;\n"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,SAASC,QAAT,GAAoB;EAClB,MAAMC,IAAI,GAAG,CACX;IACEC,UAAU,EAAE,qBADd;IAEEC,IAAI,EAAE,OAFR;IAGEC,IAAI,EAAE,OAHR;IAIEC,GAAG,EAAE,OAJP;IAKEC,KAAK,EAAE;EALT,CADW,CAAb;EASA,oBACE;IAAA,uBACE,QAAC,cAAD;MACE,IAAI,EAAC,aADP;MAEE,OAAO,EAAE;QACPC,KAAK,EAAE;UAAEC,IAAI,EAAE;QAAR,CADA;QAEPC,KAAK,EAAE;UACLD,IAAI,EAAE,UADD;UAELE,UAAU,EAAET,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEU,GAAN,CAAWC,KAAD,IAAWA,KAAK,CAACV,UAA3B;QAFP;MAFA,CAFX;MASE,MAAM,EAAE,CACN;QACED,IAAI,EAAEA,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEU,GAAN,CAAWC,KAAD,IAAW;UACzB,OAAO,CACLC,IAAI,CAACC,KAAL,CAAWF,KAAK,CAACV,UAAjB,CADK,EAELU,KAAK,CAACT,IAFD,EAGLS,KAAK,CAACR,IAHD,EAILQ,KAAK,CAACP,GAJD,EAKLO,KAAK,CAACN,KALD,CAAP;QAOD,CARK;MADR,CADM;IATV;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA2BD;;KArCQN,Q;AAuCT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}